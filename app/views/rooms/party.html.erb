<div id='invitation'>Invite your friends! Share the url of this page http://your-domain-name/party/<%= @room.id %></div>
<div class='video-container'>
	<div id='videobox' >
	</div>
	<div>
		publisher
	</div>
</div>
<script src="https://static.opentok.com/v2/js/opentok.min.js"></script>
<script type='text/javascript'>
	var apiKey = '45253112';
	var apiSecret = '989f43ac66fdf6688f1b9719168ee8292d3ce153';
	var sessionId = '<%= @room.sessionId %>';
	var token = '<%= @tok_token %>';
	var opentok = '<%= @opentok %>';
	var archive;
	var session;
	var container = $('.video-container');
	var bigBox = $('.big-videobox');
	var video = $('#videobox');
	var connectionCount = 1;
	var publisher;
function sessionConnectedHandler(event) {
		publisher = TB.initPublisher(apiKey, 'videobox');
		session.publish(publisher, {width: "100%", height: "100%"});

		// Subscribe to streams that were in the session when we connected
		subscribeToStreams(event.streams);
	}

function streamCreatedHandler(event) {
	// Subscribe to any new streams that are created
	subscribeToStreams(event.streams);
}

function subscribeToStreams(streams) {
	for (var i = 0; i < streams.length; i++) {
		// Make sure we donâ€™t subscribe to ourself
		if (streams[i].connection.connectionId == session.connection.connectionId) {
			return;
		}
		connectionCount++;
		// Create the div to put the subscriber element in to
		// var div = bigBox[0];
		// div.setAttribute('id', 'stream' + streams[i].streamId);
		// div.attr('class','big-videobox');
		// document.body.appendChild(div);


		var div = document.createElement('div');
		div.setAttribute('id', 'stream' + streams[i].streamId);
		div.setAttribute('class', 'subscriber');
		document.body.appendChild(div);

		// Subscribe to the stream
		session.subscribe(streams[i], div.id, {width: "100px", height: "100px"});
	}
}

	function connectionDestroyedHandler(event) {
		connectionCount--;
		console.log('this is event: ' + event.streams);

	}

$(document).ready(function(){
	TB.setLogLevel(TB.DEBUG);
	//session.connect(apiKey, token);
	session = TB.initSession(sessionId);
	session.addEventListener('sessionConnected', sessionConnectedHandler);
	session.addEventListener('streamCreated', streamCreatedHandler);
	session.addEventListener('connectionDestroyed', connectionDestroyedHandler)
	session.connect(apiKey, token);
	session.connect(token, function (error) {
	  if (error) {
	    console.log("Failed to connect.");
	  } else {
	    console.log('You have connected to the session.');
	  }
	});

});
</script>

